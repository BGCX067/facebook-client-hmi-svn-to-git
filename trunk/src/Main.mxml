<?xml version="1.0" encoding="utf-8"?>


<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" layout="{new VerticalLayout()}" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="500" minHeight="600"
			   creationComplete="init()" 
			   >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style source="Main.css"/>
	
	<fx:Script>
		<![CDATA[
			import com.facebook.graph.FacebookDesktop;
			import com.facebook.graph.controls.Distractor;
			import com.facebook.graph.net.FacebookRequest;
			import com.facebook.graph.utils.FacebookDataUtils;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Image;
			import mx.core.UIComponent;
			
			import spark.collections.Sort;
			import spark.collections.SortField;
			import spark.components.TextArea;
			import spark.components.Window;
			import spark.layouts.VerticalLayout;
			import spark.skins.spark.ButtonSkin;
			
		
			[Bindable] protected var friendsArrayList:ArrayCollection;
			
			protected function init():void {
				friendsList.itemRenderer = new FriendsListRenderer();
				FacebookDesktop.init('296076480440378', handleLogin);
				
			}
			
			protected function login():void {
				FacebookDesktop.login(handleLogin, ['user_photos','friends_photos','read_stream', 'publish_stream']);
			}
			
			protected function getStatusHandler(result:Object, fail:Object):void
			{
				if (fail) { return }
				
				var statuses:Array = result as Array;
				statusTxtLabel.text = statuses[0].message;
			}
			
			protected function logOut():void {
				FacebookDesktop.logout();
				status = "Login again to see your friends";
				statusTxtLabel.text = "";
				resetUI();
			}
			
			protected function resetUI():void {
				loginBtn.label = 'Login';
				loginBtn.enabled = true;
				showDetailsBtn.visible = false;
				friendsArrayList.removeAll();
				logOutBtn.enabled=false;
			}
			
			protected function loadFriends():void {
				FacebookDesktop.api('/me/friends', handleFriendsLoad);
				sortA.visible = true;
				sortD.visible = true;
				friendsList.visible = true;
			}
			
			
			protected function handleFriendsLoad(response:Object, fail:Object):void {
				friendsArrayList = new ArrayCollection();
				if (fail) { return }
				var friendsIds:Array = [];
				
				var friends:Array = response as Array;
				
				var l:uint=friends.length;
				for (var i:uint=0;i<l;i++) {
					var friend:Object = friends[i];
					friendsArrayList.addItem(friend);
				}
			}
			
			protected function handleLogin(response:Object, fail:Object):void {
				if (!response) { return; }
				loginBtn.label = 'You are logged in.';
				status = "Double click on a friend to view his/her photos";
				
				loginBtn.enabled = false;
				logOutBtn.enabled = true;
				statusTxtLabel.visible = true;
				statusLabel.visible = true;
				changeStatusButton.visible = true;
				
				FacebookDesktop.api("/me/statuses",getStatusHandler);
				loadFriends();
			}
			
			protected function handleListChange():void {
				showDetailsBtn.visible = true;
				showDetailsBtn.label = "Show Photos for " + friendsList.selectedItem.name;
				status = friendsList.selectedItem.name;
			}
			
			private function showSelectedUserPhotos():void  
			{  
				if (friendsList.selectedItem!=null) {
					var myWin1:PhotoViewWindow = new PhotoViewWindow();  
					myWin1.title = "Photos for "+ friendsList.selectedItem.name;  
					myWin1.maximizable=true;  
					myWin1.userId=friendsList.selectedItem.id;
					myWin1.open();
				}
			}
			
			private function changeStatus():void {
				FacebookDesktop.api("/me/feed",submitPostHandler,{message:statusTxtLabel.text}, "POST");
			}
			
			protected function submitPostHandler(result:Object,fail:Object):void
			{
				FacebookDesktop.api("/me/statuses",getStatusHandler);
			}
			
			private function sortAsc():void {
				var dataSortField:SortField = new SortField();
				dataSortField.name = "name";
				
				var dataSort:Sort = new Sort();
				dataSort.fields = [dataSortField];
				
				friendsArrayList.sort = dataSort;
				friendsArrayList.refresh();
			}
			
			private function sortDsc():void {
				var dataSortField:SortField = new SortField();
				dataSortField.name = "name";
				
				var dataSort:Sort = new Sort();
				dataSort.fields = [dataSortField];
				friendsArrayList.sort = dataSort;
				dataSort.reverse();
				friendsArrayList.refresh();
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" id="menubuttons">
		<s:Button id="showDetailsBtn" visible="false" click="showSelectedUserPhotos()" />
		<mx:Spacer width="100%" />
		<s:Button id="loginBtn" label="Login" click="login()"  />
		<s:Button id="logOutBtn" label="Log Out" enabled="false" click="logOut()" useHandCursor="true" buttonMode="true" />
	</s:HGroup>
	<s:HGroup  width="100%" id="statusBar">
		<s:Button id = "statusLabel" label="Status: " visible="false" enabled="false"/>
		<s:TextInput id="statusTxtLabel" text="" width="300" visible="false"/>
		<s:Button id="changeStatusButton" label="Change Status" visible="false" click="changeStatus()" />
	</s:HGroup>
	<s:HGroup>
		<s:List id="friendsList" dataProvider="{friendsArrayList}" width="300" height="500" doubleClickEnabled="true" 
				doubleClick="showSelectedUserPhotos()" change="handleListChange()" visible="false" verticalScrollPolicy="on"/>
		<s:VGroup>
			<s:Button id="sortA" label="Sort Ascending" click="sortAsc()" visible="false" />
			<s:Button id="sortD" label="Sort Descending" click="sortDsc()" visible="false" />
		</s:VGroup>
	</s:HGroup>
	
</s:WindowedApplication>
